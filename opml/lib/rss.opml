<?xml version="1.0" encoding="ISO-8859-1"?>
<opml version="2.0">
	<head>
		<title>lib/rss.js</title>
		<dateModified>&lt;%dateModified%></dateModified>
		<expansionState></expansionState>
		<vertScrollState>1</vertScrollState>
		<windowTop>300</windowTop>
		<windowLeft>700</windowLeft>
		<windowBottom>900</windowBottom>
		<windowRight>1500</windowRight>
		</head>
	<body text="lib/rss.js">
		<outline isComment="true" text="2/22/16; 1:14:53 PM by DW ">
			<outline text="A hacked up version to produce Facebook-style RSS. "></outline>
			</outline>
		<outline text=""></outline>
		<outline text="exports.chatLogToRss = chatLogToRss;   "></outline>
		<outline text="exports.cloudPing = cloudPing;"></outline>
		<outline text=""></outline>
		<outline text="var request = require (&quot;request&quot;);"></outline>
		<outline text="var querystring = require (&quot;querystring&quot;); "></outline>
		<outline text=""></outline>
		<outline text="function filledString (ch, ct) {">
			<outline text="var s = &quot;&quot;;"></outline>
			<outline text="for (var i = 0; i &lt; ct; i++) {">
				<outline text="s += ch;"></outline>
				<outline text="}"></outline>
				</outline>
			<outline text="return (s);"></outline>
			<outline text="}"></outline>
			</outline>
		<outline text="function encodeXml (s) { ">
			<outline text="if (s === undefined) { //1/9/16 by DW">
				<outline text="return (&quot;&quot;);"></outline>
				<outline text="}"></outline>
				</outline>
			<outline text="else {">
				<outline collapse="true" text="var charMap = {">
					<outline text="'&lt;': '&amp;lt;',"></outline>
					<outline text="'&gt;': '&amp;gt;',"></outline>
					<outline text="'&amp;': '&amp;amp;',"></outline>
					<outline text="'&quot;': '&amp;'+'quot;'"></outline>
					<outline text="};"></outline>
					</outline>
				<outline created="Sat, 13 Apr 2013 20:25:04 GMT" pgfnum="1662" text="s = s.toString();"></outline>
				<outline created="Fri, 12 Apr 2013 21:27:40 GMT" pgfnum="1632" text="s = s.replace(/\u00A0/g, &quot; &quot;);"></outline>
				<outline collapse="true" text="var escaped = s.replace(/[&lt;&gt;&amp;&quot;]/g, function(ch) {">
					<outline text="return charMap [ch];"></outline>
					<outline text="});"></outline>
					</outline>
				<outline created="Thu, 07 Feb 2013 04:53:23 GMT" pgfnum="129" text="return escaped;"></outline>
				<outline text="}"></outline>
				</outline>
			<outline text="}"></outline>
			</outline>
		<outline created="Mon, 11 Mar 2013 02:50:58 GMT" pgfnum="20134" text="function trimWhitespace (s) { ">
			<outline text="function isWhite (ch) {">
				<outline text="switch (ch) {">
					<outline text="case &quot; &quot;: case &quot;\r&quot;: case &quot;\n&quot;: case &quot;\t&quot;:">
						<outline text="return (true);"></outline>
						</outline>
					<outline text="}"></outline>
					</outline>
				<outline text="return (false);"></outline>
				<outline text="}"></outline>
				</outline>
			<outline text="if (s === undefined) { //9/10/14 by DW">
				<outline text="return (&quot;&quot;);"></outline>
				<outline text="}"></outline>
				</outline>
			<outline text="while (isWhite (s.charAt (0))) {">
				<outline text="s = s.substr (1);"></outline>
				<outline text="}"></outline>
				</outline>
			<outline text="while (s.length &gt; 0) {">
				<outline text="if (!isWhite (s.charAt (0))) {">
					<outline text="break;"></outline>
					<outline text="}"></outline>
					</outline>
				<outline text="s = s.substr (1);"></outline>
				<outline text="}"></outline>
				</outline>
			<outline text="while (s.length &gt; 0) {">
				<outline text="if (!isWhite (s.charAt (s.length - 1))) {">
					<outline text="break;"></outline>
					<outline text="}"></outline>
					</outline>
				<outline text="s = s.substr (0, s.length - 1);"></outline>
				<outline text="}"></outline>
				</outline>
			<outline text="return (s);"></outline>
			<outline text="}"></outline>
			</outline>
		<outline created="Wed, 16 Jul 2014 11:54:36 GMT" pgfnum="43001" text="function twTwitterDateToGMT (twitterDate) { ">
			<outline created="Wed, 16 Jul 2014 11:55:03 GMT" isComment="true" pgfnum="43005" text="Changes">
				<outline created="Wed, 16 Jul 2014 11:55:05 GMT" pgfnum="43006" text="7/16/14; 7:55:06 AM by DW">
					<outline created="Wed, 16 Jul 2014 11:55:06 GMT" pgfnum="43007" text="Twitter sends dates that are kind of net standard, but not exactly. We do the conversion."></outline>
					</outline>
				</outline>
			<outline created="Wed, 16 Jul 2014 11:55:41 GMT" pgfnum="43008" text="return (new Date (twitterDate).toGMTString ());"></outline>
			<outline created="Wed, 16 Jul 2014 11:54:52 GMT" pgfnum="43004" text="}"></outline>
			</outline>
		<outline created="Thu, 05 Dec 2013 13:36:54 GMT" pgfnum="33203" text="function getBoolean (val) { ">
			<outline created="Thu, 05 Dec 2013 13:53:35 GMT" isComment="true" pgfnum="33230" text="Changes">
				<outline created="Thu, 05 Dec 2013 13:53:37 GMT" pgfnum="33231" text="12/5/13; 8:53:38 AM by DW">
					<outline created="Thu, 05 Dec 2013 13:53:39 GMT" pgfnum="33232" text="Created. Use this to get a boolean value from something that might not be a boolean. "></outline>
					<outline created="Thu, 05 Dec 2013 13:54:18 GMT" pgfnum="33233" text="For example, &quot;false&quot; should be the boolean value false, but in JavaScript, it's true. "></outline>
					<outline created="Thu, 05 Dec 2013 13:54:42 GMT" pgfnum="33234" text="So pass it through this routine to be safe. "></outline>
					</outline>
				</outline>
			<outline created="Thu, 05 Dec 2013 13:38:37 GMT" pgfnum="33207" text="switch (typeof (val)) {">
				<outline created="Thu, 05 Dec 2013 13:38:50 GMT" pgfnum="33209" text="case &quot;string&quot;:">
					<outline created="Thu, 05 Dec 2013 13:39:59 GMT" pgfnum="33215" text="if (val.toLowerCase () == &quot;true&quot;) {">
						<outline created="Thu, 05 Dec 2013 13:40:47 GMT" pgfnum="33219" text="return (true);"></outline>
						<outline created="Thu, 05 Dec 2013 13:40:32 GMT" pgfnum="33216" text="}"></outline>
						</outline>
					<outline created="Thu, 05 Dec 2013 13:40:55 GMT" pgfnum="33220" text="break;"></outline>
					</outline>
				<outline created="Thu, 05 Dec 2013 13:38:57 GMT" pgfnum="33211" text="case &quot;boolean&quot;:">
					<outline created="Thu, 05 Dec 2013 13:41:03 GMT" pgfnum="33221" text="return (val);"></outline>
					</outline>
				<outline created="Thu, 05 Dec 2013 13:39:46 GMT" pgfnum="33213" text="case &quot;number&quot;:">
					<outline created="Thu, 05 Dec 2013 13:41:11 GMT" pgfnum="33222" text="if (val == 1) {">
						<outline created="Thu, 05 Dec 2013 13:41:16 GMT" pgfnum="33223" text="return (true);"></outline>
						<outline created="Thu, 05 Dec 2013 13:41:19 GMT" pgfnum="33224" text="}"></outline>
						</outline>
					<outline created="Thu, 05 Dec 2013 13:39:50 GMT" pgfnum="33214" text="break;"></outline>
					</outline>
				<outline created="Thu, 05 Dec 2013 13:38:45 GMT" pgfnum="33208" text="}"></outline>
				</outline>
			<outline created="Thu, 05 Dec 2013 13:41:34 GMT" pgfnum="33225" text="return (false);"></outline>
			<outline created="Thu, 05 Dec 2013 13:37:02 GMT" pgfnum="33206" text="}"></outline>
			</outline>
		<outline text=""></outline>
		<outline text="[[http://fargo.io/code/shared/buildrss.js]]"></outline>
		<outline text=""></outline>
		<outline text="function cloudPing (urlServer, urlFeed) {">
			<outline text="var outgoingData = {">
				<outline text="url: urlFeed"></outline>
				<outline text="};"></outline>
				</outline>
			<outline text="var rq = {">
				<outline text="uri: urlServer,"></outline>
				<outline text="body: querystring.stringify (outgoingData)"></outline>
				<outline text="};"></outline>
				</outline>
			<outline text="request.post (rq, function (err, res, body) {">
				<outline isComment="true" text="console.log (&quot;cloudPing: urlServer == &quot; + urlServer + &quot;, urlFeed == &quot; + urlFeed + &quot;, res.statusCode == &quot; + res.statusCode);"></outline>
				<outline text="});"></outline>
				</outline>
			<outline text="}"></outline>
			</outline>
		<outline text="function chatLogToRss (headElements, chatlog) {">
			<outline isComment="true" text="Changes ">
				<outline text="12/2/15; 10:12:10 AM by DW">
					<outline text="The criteria for inclusion in the feed has changed. Now it must have a payload item called flPublished and it must be true."></outline>
					</outline>
				</outline>
			<outline text="function getChatItemTitle (item) { //returns &quot;&quot; if it has no title">
				<outline text="if (item.payload !== undefined) {">
					<outline text="if (item.payload.title !== undefined) {">
						<outline text="return (item.payload.title);"></outline>
						<outline text="}"></outline>
						</outline>
					<outline text="}"></outline>
					</outline>
				<outline text="return (&quot;&quot;);"></outline>
				<outline text="}"></outline>
				</outline>
			<outline text="function addOutlineToRssItem (chatitem, rssitem) {">
				<outline text="function getOutline (chatitem) {">
					<outline text="var theOutline = new Object ();"></outline>
					<outline text="theOutline.text = chatitem.text;"></outline>
					<outline text="theOutline.created = new Date (chatitem.when).toUTCString ();"></outline>
					<outline text="theOutline.screenname = chatitem.name; //who uttered this, right now not supported in the RSS"></outline>
					<outline text="if (chatitem.subs !== undefined) {">
						<outline text="theOutline.subs = new Array ();"></outline>
						<outline text="for (var i = 0; i &lt; chatitem.subs.length; i++) {">
							<outline text="theOutline.subs [i] = getOutline (chatitem.subs [i]);"></outline>
							<outline text="}"></outline>
							</outline>
						<outline text="}"></outline>
						</outline>
					<outline text="return (theOutline);"></outline>
					<outline text="}"></outline>
					</outline>
				<outline text=""></outline>
				<outline text="var theOutline = new Object ();"></outline>
				<outline text="theOutline.text = getChatItemTitle (chatitem);"></outline>
				<outline text="theOutline.created = new Date (chatitem.when).toUTCString ();"></outline>
				<outline text="theOutline.type = &quot;outline&quot;;"></outline>
				<outline isComment="true" text="theOutline.flMarkdown = getBoolean (chatitem.payload.flMarkdown);"></outline>
				<outline text="theOutline.subs = new Array ();"></outline>
				<outline text="theOutline.subs [0] = getOutline (chatitem);"></outline>
				<outline text=""></outline>
				<outline text="rssitem.outline = theOutline;"></outline>
				<outline text="}"></outline>
				</outline>
			<outline text="function hasBeenPublished (item) {">
				<outline text="if (Number (new Date (item.when)) &lt; 1449070134392) { //12/2/15; 10:28:22 AM -- approximately -- when the format changed">
					<outline isComment="true" text="console.log (&quot;hasBeenPublished: item.id == &quot; + item.id + &quot; is an old post&quot;);"></outline>
					<outline text="return ((item.payload !== undefined) &amp;&amp; (item.payload.urlRendering !== undefined));"></outline>
					<outline text="}"></outline>
					</outline>
				<outline text="else {">
					<outline isComment="true" text="console.log (&quot;hasBeenPublished: item.id == &quot; + item.id + &quot; is a new post&quot;);"></outline>
					<outline text="return ((item.payload !== undefined) &amp;&amp; item.payload.flPublished);"></outline>
					<outline text="}"></outline>
					</outline>
				<outline text="}"></outline>
				</outline>
			<outline text="var rsshistory = new Array ();"></outline>
			<outline text="for (var i = chatlog.length - 1; i &gt;= 0; i--) {">
				<outline text="var chatitem = chatlog [i];"></outline>
				<outline text="if (hasBeenPublished (chatitem)) {">
					<outline text="var rssitem = new Object ();"></outline>
					<outline text="rssitem.text = chatitem.text;"></outline>
					<outline text="if (chatitem.payload.title !== undefined) {">
						<outline text="rssitem.title = chatitem.payload.title;"></outline>
						<outline text="}"></outline>
						</outline>
					<outline text="rssitem.link = chatitem.payload.urlRendering;"></outline>
					<outline text="rssitem.when = chatitem.when;"></outline>
					<outline text="rssitem.name = chatitem.name; //2/24/16 by DW"></outline>
					<outline text="rssitem.whenupdate = chatitem.whenLastUpdate; //2/23/16 by DW"></outline>
					<outline text="rssitem.id = chatitem.id;"></outline>
					<outline text="rssitem.guid = {">
						<outline text="flPermalink: true,"></outline>
						<outline text="value: chatitem.payload.urlRendering"></outline>
						<outline text="};"></outline>
						</outline>
					<outline text="if (chatitem.payload.enclosure !== undefined) { //11/11/15 by DW">
						<outline text="rssitem.enclosure = chatitem.payload.enclosure;"></outline>
						<outline text="}"></outline>
						</outline>
					<outline text="if ((chatitem.flNotTwitterName === undefined) || (!chatitem.flNotTwitterName)) { ">
						<outline text="rssitem.screenname = chatitem.name;"></outline>
						<outline text="}"></outline>
						</outline>
					<outline text="addOutlineToRssItem (chatitem, rssitem);"></outline>
					<outline isComment="true" text="rsshistory.unshift (rssitem);"></outline>
					<outline text="rsshistory [rsshistory.length] = rssitem;"></outline>
					<outline text="}"></outline>
					</outline>
				<outline text="}"></outline>
				</outline>
			<outline isComment="true" text="console.log (&quot;chatLogToRssHistory: rsshistory == &quot; + jsonStringify (rsshistory));"></outline>
			<outline text="var xmltext = buildRssFeed (headElements, rsshistory);"></outline>
			<outline isComment="true" text="console.log (&quot;chatLogToRssHistory: xmltext == &quot; + jsonStringify (xmltext));"></outline>
			<outline text="return (xmltext);"></outline>
			<outline text="}"></outline>
			</outline>
		</body>
	</opml>
